datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Channel {
  createdAt DateTime      @default(now())
  id        String        @id @default(uuid()) @db.Uuid
  messages  Message[]
  name      String?
  owner     User          @relation(fields: [ownerId], references: [id])
  ownerId   String        @db.Uuid
  users     ChannelUser[]
}

model ChannelUser {
  channel   Channel @relation(fields: [channelId], references: [id])
  channelId String  @db.Uuid
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.Uuid

  @@id([channelId, userId])
}

model Message {
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId String   @db.Uuid
  createdAt DateTime @default(now())
  from      User     @relation(fields: [fromId], references: [id])
  fromId    String   @db.Uuid
  id        String   @id @default(uuid()) @db.Uuid
  text      String
}

model Session {
  data   Json
  id     String @id @default(uuid()) @db.Uuid
  ip     String @db.Inet
  token  String @unique @db.VarChar
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid
}

model User {
  channels    ChannelUser[]
  createdAt   DateTime      @default(now())
  email       String        @unique @db.VarChar(64)
  id          String        @id @default(uuid()) @db.Uuid
  messages    Message[]
  name        String
  ownChannels Channel[]
  password    String        @db.VarChar
  role        Role          @default(USER)
  sessions    Session[]
  updatedAt   DateTime      @updatedAt
}

enum Role {
  ADMIN
  USER
}
