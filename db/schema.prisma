datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Area {
  areaUser AreaUser[]
  id       BigInt     @id(map: "pkArea") @default(autoincrement())
  message  Message[]
  name     String     @unique(map: "akAreaName") @db.VarChar
  ownerId  BigInt
  user     User       @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkAreaOwner")
}

model AreaUser {
  area   Area   @relation(fields: [areaId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkAreaUserArea")
  areaId BigInt
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkAreaUserUser")
  userId BigInt

  @@id([areaId, userId], map: "pkAreaUser")
}

model Message {
  area   Area   @relation(fields: [areaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkMessageArea")
  areaId BigInt
  from   User   @relation(fields: [fromId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkMessageFrom")
  fromId BigInt
  id     BigInt @id(map: "pkMessage") @default(autoincrement())
  text   String @db.VarChar
}

model Role {
  id       BigInt     @id(map: "pkRole") @default(autoincrement())
  name     String     @unique(map: "akRoleName") @db.VarChar
  userRole UserRole[]
}

model Session {
  sessionId BigInt @id(map: "pkSession") @default(autoincrement())
  userId    BigInt
  token     String @unique(map: "akSessionToken") @db.VarChar
  ip        String @db.Inet
  data      Json
  user      User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkSessionAccount")
}

model User {
  area     Area[]
  areaUser AreaUser[]
  id       BigInt     @id(map: "pkUser") @default(autoincrement())
  login    String     @unique(map: "akUserLogin") @db.VarChar(64)
  message  Message[]
  password String     @db.VarChar
  session  Session[]
  userRole UserRole[]
}

model UserRole {
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkUserRoleRole")
  roleId BigInt
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkUserRoleUser")
  userId BigInt

  @@id([userId, roleId], map: "pkUserRole")
}
