datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Channel {
  channelUser ChannelUser[]
  createdAt   DateTime      @default(now())
  id          BigInt        @id(map: "pkChannel") @default(autoincrement())
  message     Message[]
  name        String        @unique(map: "akChannelName") @db.VarChar
  owner       User          @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkChannelOwner")
  ownerId     BigInt
}

model ChannelUser {
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkChannelUserChannel")
  channelId BigInt
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkChannelUserUser")
  userId    BigInt

  @@id([channelId, userId], map: "pkChannelUser")
}

model Message {
  channel   Channel  @relation(fields: [channelId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkMessageChannel")
  channelId BigInt
  createdAt DateTime @default(now())
  from      User     @relation(fields: [fromId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkMessageFrom")
  fromId    BigInt
  id        BigInt   @id(map: "pkMessage") @default(autoincrement())
  text      String   @db.VarChar
}

model Role {
  id       BigInt     @id(map: "pkRole") @default(autoincrement())
  name     String     @unique(map: "akRoleName") @db.VarChar
  userRole UserRole[]
}

model Session {
  data   Json
  id     BigInt @id(map: "pkSession") @default(autoincrement())
  ip     String @db.Inet
  token  String @unique(map: "akSessionToken") @db.VarChar
  user   User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkSessionUser")
  userId BigInt
}

model User {
  channel     Channel[]
  channelUser ChannelUser[]
  createdAt   DateTime      @default(now())
  email       String        @unique(map: "akUserEmail") @db.VarChar(64)
  id          BigInt        @id(map: "pkUser") @default(autoincrement())
  message     Message[]
  password    String        @db.VarChar
  session     Session[]
  updatedAt   DateTime      @updatedAt
  userRole    UserRole[]
}

model UserRole {
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkUserRoleRole")
  roleId BigInt
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkUserRoleUser")
  userId BigInt

  @@id([userId, roleId], map: "pkUserRole")
}
